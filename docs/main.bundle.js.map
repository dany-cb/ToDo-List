{"version":3,"file":"main.bundle.js","mappings":"6BA6BIA,E,EA2BJ,E,wyECvDIC,EAA2B,G,EAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,Q,MDmCf,EAzBA,WAKE,WAAYG,EAAkBC,EAA2BC,G,WAAA,IAAAA,IAAAA,GAAA,GAElDX,IACHA,EAnCN,WACE,IAAMA,EAAMY,SAASC,cAAc,OACnCb,EAAIc,UAAY,OAChB,IAAMC,EAAQH,SAASC,cAAc,SAC/BG,EAAWJ,SAASC,cAAc,SACxCG,EAASC,aAAa,OAAQ,YAC9BD,EAASF,UAAY,mBACrB,IAAMI,EAAMN,SAASO,gBAAgB,6BAA8B,OACnED,EAAID,aAAa,UAAW,aAC5BC,EAAID,aAAa,QAAS,mBAC1B,IAAMG,EAAMR,SAASO,gBAAgB,6BAA8B,OAKnE,OAJAC,EAAIH,aAAa,OAAQ,eACzBC,EAAIG,YAAYD,GAChBL,EAAMO,OAAON,EAAUE,GACvBlB,EAAIqB,YAAYN,GACTf,EAoBGuB,IAERC,KAAKC,OAASzB,EAAI0B,WAAU,GAnBhC,SAAiBD,EAAchB,GAC7B,IAAMkB,EAAOf,SAASC,cAAc,KACpCc,EAAKb,UAAY,YACjBa,EAAKC,UAAYnB,EACjBgB,EAAOJ,YAAYM,GAgBjBE,CAAQL,KAAKC,OAAQhB,GACrBe,KAAKM,OAASN,KAAKC,OAAOM,WACU,QAAtB,EAAAP,KAAKC,OAAOO,kBAAU,eAAEA,YAChCC,iBAAiB,QAAST,KAAKU,YAAYC,KAAKX,OACtDd,EAAUW,YAAYG,KAAKC,QAC3BD,KAAKY,OAASzB,IAAQ,EAO1B,OAJE,YAAAuB,YAAA,WACEV,KAAKY,QAAUZ,KAAKY,OACpBZ,KAAKM,OAAOO,MAAMC,eAAiBd,KAAKY,OAAS,GAAK,gBAE1D,EAvBA,GE6DA,IAnFA,WAeE,aAnBYxB,SAAS2B,eAAe,QAChCC,IAAM,EAqBRhB,KAAKiB,KAAO,GACZjB,KAAKkB,aAELlB,KAAKmB,UAAY,CACfC,MAAOhC,SAAS2B,eAAe,WAC/BM,YAAY,GAEdrB,KAAKd,UAAYE,SAASkC,cAAc,cACxCtB,KAAKuB,MAAQ,GAEbvB,KAAKwB,eAqDT,OAlDE,YAAAA,aAAA,sBACExB,KAAKiB,KAAK,GAAGG,MAAMX,iBAAiB,QAAST,KAAKyB,aAAad,KAAKX,OACpEA,KAAKiB,KAAK,GAAGG,MAAMX,iBAAiB,QAAST,KAAK0B,YAAYf,KAAKX,OACnEA,KAAKmB,UAAUC,MAAMX,iBAAiB,WAAW,SAACkB,GACjC,UAAXA,EAAGC,KAEL,EAAKF,kBAKX,YAAAD,aAAA,WACEzB,KAAKmB,UAAUC,MAAMS,gBAAkB7B,KAAKmB,UAAUE,WAClD,QACA,OACJrB,KAAKmB,UAAUE,YAAcrB,KAAKmB,UAAUE,WAC5CrB,KAAKiB,KAAKa,KAAI,SAACC,GACTA,EAAIC,OACND,EAAIX,MAAMP,MAAMoB,QAAU,GAE1BF,EAAIX,MAAMP,MAAMoB,QAAU,OAE5BF,EAAIC,QAAUD,EAAIC,WAItB,YAAAN,YAAA,sBACM1B,KAAKmB,UAAUC,MAAMhB,WACvBJ,KAAKuB,MAAMW,KAAK,IAAI,EAAKlC,KAAKmB,UAAUC,MAAMhB,UAAWJ,KAAKd,YAC9Dc,KAAKmB,UAAUC,MAAMhB,UAAY,GACjCJ,KAAKyB,iBAELzB,KAAKmB,UAAUC,MAAMe,UAAUC,IAAI,iBACnCC,YAAW,WACT,EAAKlB,UAAUC,MAAMe,UAAUG,OAAO,iBACtC,EAAKnB,UAAUC,MAAMmB,UACpB,OAIP,YAAArB,WAAA,sBAEQsB,EAAa,CAAC,OAAQ,WADX,CAAC,MAAO,OAAQ,MAAO,WAE/BV,KAAI,SAACW,GACZ,EAAKxB,KAAKiB,KAAK,CACbd,MAAOhC,SAASkC,cAAc,oBAAamB,IAC3CT,OAAQQ,EAAWE,SAASD,SAIpC,EAjFA,I","sources":["webpack://typescript/./src/task.ts","webpack://typescript/webpack/bootstrap","webpack://typescript/./src/index.ts"],"sourcesContent":["/**\r\n * Defines the necessary structure of the task and returns the Parent Element\r\n * @param textData text to be inserted\r\n */\r\nfunction createTaskEl() {\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"task\";\r\n  const label = document.createElement(\"label\");\r\n  const checkBox = document.createElement(\"input\");\r\n  checkBox.setAttribute(\"type\", \"checkbox\");\r\n  checkBox.className = \"task_hiddenInput\";\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  svg.setAttribute(\"viewBox\", \"0 0 15 15\");\r\n  svg.setAttribute(\"class\", \"i task_checkBox\");\r\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n  use.setAttribute(\"href\", \"#tickSymbol\");\r\n  svg.appendChild(use);\r\n  label.append(checkBox, svg);\r\n  div.appendChild(label);\r\n  return div;\r\n}\r\n\r\nfunction addText(taskEl: Node, textData: string) {\r\n  const text = document.createElement(\"p\");\r\n  text.className = \"task_text\";\r\n  text.innerText = textData;\r\n  taskEl.appendChild(text);\r\n}\r\n\r\nlet div: HTMLDivElement | undefined;\r\n\r\nclass Task {\r\n  taskEl: Node;\r\n  textEl: HTMLParagraphElement;\r\n  isDone: boolean;\r\n\r\n  constructor(textData: string, container: HTMLDivElement, done = true) {\r\n    //Defining the necessary structure for each Task and appending it to the container\r\n    if (!div) {\r\n      div = createTaskEl();\r\n    }\r\n    this.taskEl = div.cloneNode(true);\r\n    addText(this.taskEl, textData);\r\n    this.textEl = this.taskEl.lastChild as HTMLParagraphElement;\r\n    const label = this.taskEl.firstChild?.firstChild as HTMLLabelElement;\r\n    label.addEventListener(\"click\", this.toggleState.bind(this));\r\n    container.appendChild(this.taskEl);\r\n    this.isDone = done || false;\r\n  }\r\n\r\n  toggleState() {\r\n    this.isDone = !this.isDone;\r\n    this.textEl.style.textDecoration = this.isDone ? \"\" : \"line-through\";\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Icon from \"./assets/githubLogo-32px.png\";\r\nimport \"./styles.scss\";\r\nimport Task from \"./task\";\r\n\r\nfunction importAssets() {\r\n  const img = document.getElementById(\"logo\") as HTMLImageElement;\r\n  img.src = Icon;\r\n}\r\n\r\nclass TodoApp {\r\n  btns: {\r\n    elmnt: HTMLButtonElement;\r\n    hidden: boolean;\r\n  }[];\r\n\r\n  inputArea: {\r\n    elmnt: HTMLDivElement;\r\n    isEditable: boolean;\r\n  };\r\n\r\n  container: HTMLDivElement;\r\n\r\n  tasks: Task[];\r\n\r\n  constructor() {\r\n    importAssets();\r\n\r\n    this.btns = [];\r\n    this.updateBtns();\r\n\r\n    this.inputArea = {\r\n      elmnt: document.getElementById(\"addTask\") as HTMLDivElement,\r\n      isEditable: false\r\n    };\r\n    this.container = document.querySelector(\".tasksWrap\") as HTMLDivElement;\r\n    this.tasks = [];\r\n    //  Testing\r\n    this.setListeners();\r\n  }\r\n\r\n  setListeners() {\r\n    this.btns[0].elmnt.addEventListener(\"click\", this.toggleStates.bind(this));\r\n    this.btns[1].elmnt.addEventListener(\"click\", this.onClickSave.bind(this));\r\n    this.inputArea.elmnt.addEventListener(\"keydown\", (ev) => {\r\n      if (ev.key === \"Enter\") {\r\n        // console.log(\"Enter clicked inside TextBox\");\r\n        this.onClickSave();\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleStates() {\r\n    this.inputArea.elmnt.contentEditable = this.inputArea.isEditable\r\n      ? \"false\"\r\n      : \"true\";\r\n    this.inputArea.isEditable = !this.inputArea.isEditable;\r\n    this.btns.map((btn) => {\r\n      if (btn.hidden) {\r\n        btn.elmnt.style.display = \"\";\r\n      } else {\r\n        btn.elmnt.style.display = \"none\";\r\n      }\r\n      btn.hidden = !btn.hidden;\r\n    });\r\n  }\r\n\r\n  onClickSave() {\r\n    if (this.inputArea.elmnt.innerText) {\r\n      this.tasks.push(new Task(this.inputArea.elmnt.innerText, this.container));\r\n      this.inputArea.elmnt.innerText = \"\";\r\n      this.toggleStates();\r\n    } else {\r\n      this.inputArea.elmnt.classList.add(\"addTask-error\");\r\n      setTimeout(() => {\r\n        this.inputArea.elmnt.classList.remove(\"addTask-error\");\r\n        this.inputArea.elmnt.focus();\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  updateBtns() {\r\n    const btnNames = [\"add\", \"save\", \"del\", \"discard\"];\r\n    const hiddenBtns = [\"save\", \"discard\"];\r\n    btnNames.map((name) => {\r\n      this.btns.push({\r\n        elmnt: document.querySelector(`.editBtns_${name}`) as HTMLButtonElement,\r\n        hidden: hiddenBtns.includes(name)\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nnew TodoApp();\r\n"],"names":["div","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","textData","container","done","document","createElement","className","label","checkBox","setAttribute","svg","createElementNS","use","appendChild","append","createTaskEl","this","taskEl","cloneNode","text","innerText","addText","textEl","lastChild","firstChild","addEventListener","toggleState","bind","isDone","style","textDecoration","getElementById","src","btns","updateBtns","inputArea","elmnt","isEditable","querySelector","tasks","setListeners","toggleStates","onClickSave","ev","key","contentEditable","map","btn","hidden","display","push","classList","add","setTimeout","remove","focus","hiddenBtns","name","includes"],"sourceRoot":""}